{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "pmAdminUsername": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "User name for the Puppet Master Virtual Machine."
      }
    },
    "pmAdminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the Puppet Master Virtual Machine."
      }
    },
    "pmDnsNameForPublicIP": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Globally unique DNS Name for the Public IP used to access the Puppet Master Virtual Machine."
      }
    },
    "pmConsolePassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the Puppet Master console admin account."
      }
    },
    "mrpAdminUsername": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "User name for the MRP Virtual Machine."
      }
    },
    "mrpAdminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the MRP Virtual Machine."
      }
    },
    "mrpDnsNameForPublicIP": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Globally unique DNS Name for the Public IP used to access the MRP Virtual Machine."
      }
    }
  },
  "variables": {
    "pmImagePublisher": "Canonical",
    "pmImageOffer": "UbuntuServer",
    "pmImageSku": "16.04.0-LTS",
    "pmVersion": "2017.1.0",
    "mrpImagePublisher": "Canonical",
    "mrpImageOffer": "UbuntuServer",
    "mrpImageSku": "16.04.0-LTS",
    "mrpOSDiskName": "mrpOsdisk",
    "pmOSDiskName": "pupperMasterOsdisk",
    "pmNicName": "puppetNic",
    "mrpNicName": "mrpNic",
    "addressPrefix": "10.0.0.0/16",
    "subnetName": "Subnet",
    "subnetPrefix": "10.0.0.0/24",
    "storageType": "Standard_LRS",
    "publicIPAddressType": "Dynamic",
    "vhdStorageContainerName": "vhds",
    "pmNsgName": "pmNSG",
    "mrpNsgName": "mrpNSG",
    "pmVmSize": "Standard_D2_V2",
    "mrpVmSize": "Standard_A2",
    "pmVmName": "[toLower(parameters('pmDnsNameForPublicIP'))]",
    "mrpVmName": "[toLower(parameters('mrpDnsNameForPublicIP'))]",
    "virtualNetworkName": "puppetVNET",
    "vnetId": "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetId'), '/subnets/', variables('subnetName'))]",
    "storageName": "[concat('vhdstorage', uniqueString(resourceGroup().id))]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageName')]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "StorageAccount"
      },
      "properties": {
        "accountType": "[variables('storageType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[parameters('pmDnsNameForPublicIP')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "PublicIPAddress-pm"
      },
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[parameters('pmDnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[parameters('mrpDnsNameForPublicIP')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "PublicIPAddress-mrp"
      },
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[parameters('mrpDnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "VirtualNetwork"
      },
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('pmNsgName')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "NSG-pm"
      },
      "properties": {
        "securityRules": [
          {
            "name": "SSH",
            "properties": {
              "description": "SSH port",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 1000,
              "direction": "Inbound"
            }
          },
          {
            "name": "HTTPS",
            "properties": {
              "description": "HTTPS port",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "443",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 1100,
              "direction": "Inbound"
            }
          },
          {
            "name": "Puppet",
            "properties": {
              "description": "Puppet port",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "8140",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 1200,
              "direction": "Inbound"
            }
          },
          {
            "name": "MCollective",
            "properties": {
              "description": "MCollective port",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "61613",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 1300,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('mrpNsgName')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "NSG-mrp"
      },
      "properties": {
        "securityRules": [
          {
            "name": "SSH",
            "properties": {
              "description": "SSH port",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 1000,
              "direction": "Inbound"
            }
          },
          {
            "name": "MRP",
            "properties": {
              "description": "MRP port",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "9080",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 1100,
              "direction": "Inbound"
            }
          },
          {
            "name": "OrderingSvc",
            "properties": {
              "description": "OrderingService port",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "8080",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 1200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('pmNicName')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "NIC-pm"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', parameters('pmDnsNameForPublicIP'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[concat('Microsoft.Network/networkSecurityGroups/', variables('pmNSGName'))]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('pmNSGName'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('pmDnsNameForPublicIP'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('mrpNicName')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "NIC-mrp"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', parameters('mrpDnsNameForPublicIP'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[concat('Microsoft.Network/networkSecurityGroups/', variables('mrpNSGName'))]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('mrpNSGName'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('mrpDnsNameForPublicIP'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('pmVmName')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "VM-PuppetMaster"
      },
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('pmNicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('pmVmSize')]"
        },
        "osProfile": {
          "computerName": "[variables('pmVmName')]",
          "adminUsername": "[parameters('pmAdminUsername')]",
          "adminPassword": "[parameters('pmAdminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('pmImagePublisher')]",
            "offer": "[variables('pmImageOffer')]",
            "sku": "[variables('pmImageSku')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://', variables('storageName'), '.blob.core.windows.net/', variables('vhdStorageContainerName'), '/', variables('pmOSDiskName'), '.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('pmNicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[concat('http://', variables('storageName'), '.blob.core.windows.net')]"
          }
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('mrpVmName')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "VM-mrp"
      },
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('mrpNicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('mrpVmSize')]"
        },
        "osProfile": {
          "computerName": "[variables('mrpVmName')]",
          "adminUsername": "[parameters('mrpAdminUsername')]",
          "adminPassword": "[parameters('mrpAdminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('mrpImagePublisher')]",
            "offer": "[variables('mrpImageOffer')]",
            "sku": "[variables('mrpImageSku')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://', variables('storageName'), '.blob.core.windows.net/', variables('vhdStorageContainerName'), '/', variables('mrpOSDiskName'), '.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('mrpNicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[concat('http://', variables('storageName'), '.blob.core.windows.net')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('pmVmName'),'/puppetenterpriseinstall')]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('pmVmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.OSTCExtensions",
        "type": "CustomScriptForLinux",
        "typeHandlerVersion": "1.4",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": [
            "https://raw.githubusercontent.com/Microsoft/PartsUnlimitedMRP/master/Labfiles/DevOps200.2x-InfrastructureasCode/Puppet/env/install_puppetenterprise.sh"
          ]
        },
        "protectedSettings": {
          "commandToExecute": "[concat('bash install_puppetenterprise.sh ', variables('pmVersion'), ' ', parameters('pmConsolePassword'))]"
        }
      }
    }
  ]
}
