Fabrikam Development Status

At this point, a skeleton of the service REST API is in place. Quotes can be created and queried, catalog item can be
added to the catalog, dealers added and listed, and orders can be created from quotes.

Here are some sample Fiddler requests (the user agent can be anything, of course):

List items in the catalog:

GET /catalog HTTP/1.1
User-Agent: Fiddler
Host: localhost:8080

Add an item to the catalog with SKU # 'MRP-004':

POST /catalog HTTP/1.1
User-Agent: Fiddler
Host: localhost:8080
Content-Type: application/json

{"skuNumber" : "MRP-0004", "description" : "Break Calipers Guide Pin Boot Kit", "price" : 8.99, "inventory" : 10, "leadTime" : 5}


Get a list of all the known dealers in the system:

GET /dealers HTTP/1.1
User-Agent: Fiddler
Host: localhost:8080


Add a new dealer called 'BigJoe':

POST /dealers HTTP/1.1
User-Agent: Fiddler
Host: localhost:8080
Content-Type: application/json

{"name":"BigJoe","contact":"John Doe","address":"123 Main Street, Redmond, WA 98052","email":"jdoe@tempuri.org", "phone":"425-555-1212"}


Get information on a given quote:

GET /quotes/quote-1 HTTP/1.1
User-Agent: Fiddler
Host: localhost:8080


Get all quotes for customers containing the string 'Little Inn'

GET /quotes?name=Little%20Inn HTTP/1.1
User-Agent: Fiddler
Host: localhost:8080


Delete a given quote from the system:

DELETE /quotes/quote-1 HTTP/1.1
User-Agent: Fiddler
Host: localhost:8080


Create a new quote (the quote id is returned in the Location header of the response):

POST /quotes HTTP/1.1
User-Agent: Fiddler
Host: localhost:8080
Content-Type: application/json

{"customerName":"The Little Inn by the Bay",
  "dealerName":"BigJoe",
  "comments":"Here is your quote for our top-of-the-line fridge unit.",
  "terms":"60 days",
  "validUntil":"12/1/14",
  "unitDescription":"CoolnessExtreme",
  "additionalItems":[
    {"skuNumber":"MRP-0001","amount":100.0},
    {"skuNumber":"MRP-0002","amount":2.0}
  ],
  "unitCost":12000.0,
  "totalCost":18050.0,
  "discount":1500.0,
  "height":2.5,
  "width":5.0,
  "depth":8.0,
  "unit":"meters",
  "purpose":"Refrigerator",
  "ambientPeak":25.0,
  "ambientAverage":21.0,
  "buildOnSite":true,
  "city":"Wellfleet",
  "postalCode":"02667",
  "state":"MA"}


Update an existing quote:

PUT /quotes/quote-1 HTTP/1.1
User-Agent: Fiddler
Host: localhost:8080
Content-Type: application/json

{"customerName":"The Little Inn by the Bay",
  "dealerName":"LittleJoe",
  "comments":"Here is your quote for our top-of-the-line fridge unit.",
  "terms":"60 days",
  "validUntil":"12/1/14",
  "unitDescription":"CoolnessExtreme",
  "additionalItems":[
    {"skuNumber":"ACC-0001", "amount":150.0},
    {"skuNumber":"ACC-0003", "amount":1.0},
    {"skuNumber":"ACC-0004", "amount":50.0}
  ],
  "unitCost":12000.0,
  "totalCost":18050.0,
  "discount":1500.0,
  "height":2.5,
  "width":5.0,
  "depth":8.0,
  "unit":"meters",
  "purpose":"Refrigerator",
  "ambientPeak":25.0,
  "ambientAverage":21.0,
  "buildOnSite":true,
  "city":"Wellfleet",
  "postalCode":"02667",
  "state":"MA"}


Get the given order:

GET /orders/order-quote-1  HTTP/1.1
User-Agent: Fiddler
Host: localhost:8080

Get all orders for a given dealer, identified by name:

GET /orders?dealer=BigJoe  HTTP/1.1
User-Agent: Fiddler
Host: localhost:8080

Get all orders for a given dealer, identified by name. Filter by status.

GET /orders?dealer=BigJoe&status=Confirmed  HTTP/1.1
User-Agent: Fiddler
Host: localhost:8080


Create a new order from a quote. The order id is returned in the 'Location' header of the response.

POST /orders?fromQuote=quote-1  HTTP/1.1
User-Agent: Fiddler
Host: localhost:8080


List all shipments, regardless of status

GET /shipments  HTTP/1.1
User-Agent: Fiddler
Host: localhost:8080

List all shipments of a given status

GET /shipments?status=Created  HTTP/1.1
User-Agent: Fiddler
Host: localhost:8080

Get the details of a specific shipment record

GET /shipments/order-quote-1  HTTP/1.1
User-Agent: Fiddler
Host: localhost:8080

Create a new shipment record (only one per order)

POST /shipments  HTTP/1.1
User-Agent: Fiddler
Host: localhost:8080
Content-Type: application/json

{ "orderId":"order-quote-1",
   "contactName":"Jane Smith",
   "deliveryAddress":{"street":"123 Main St.","city":"Redmond","state":"WA","postalCode":"98052","specialInstructions":"Look for a yellow house" },
   "primaryContactPhone": {"kind":"Mobile", "phoneNumber":"425-555-1212"},
   "alternateContactPhone": {"kind":"Work", "phoneNumber":"425-555-1213"},
   "events": [] }

Modify an existing shipment record. Missing fields will be overwritten with null

PUT /shipments/order-quote-1  HTTP/1.1
User-Agent: Fiddler
Host: localhost:8080
Content-Type: application/json

{ "orderId":"order-quote-1",
   "contactName":"John Smith",
   "deliveryAddress":{"street":"123 Main St.","city":"Redmond","state":"WA","postalCode":"98052","specialInstructions":"Look for a yellow house" },
   "primaryContactPhone": {"kind":"Mobile", "phoneNumber":"425-555-1212"},
   "alternateContactPhone": {"kind":"Work", "phoneNumber":"425-555-1213"},
   "events": [] }

Add a comment to the shipment.

POST /shipments/order-quote-1/events HTTP/1.1
User-Agent: Fiddler
Host: localhost:8080
Content-Type: application/json

{"comments":"Coming from Fiddler"}




On OS X, curl is the best tool to use, but it's more complex. The 'scripts' directory contains a number of files to test things with.

To go through dealer and catalog update, quote creation and update, then order creation, issue the following from
the scripts directory:

./setup.sh
./update.sh
./createorder.sh
